buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}


apply plugin: 'groovy'

repositories { 
	mavenCentral()
}

dependencies {
	compile 'org.eclipse.xtext:org.eclipse.xtext.xtext:2.7.3'
	compile 'org.eclipse.xtext:org.eclipse.xtext.standalone:2.4.3'
	compile gradleApi()
	compile localGroovy()
}

apply plugin: 'maven'
repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

version=1.0
group='org.ensta'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
	jcenter()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

bintray {
	user = bintray_user
	key = bintray_api_key //this comes from the gradle.properties in ~/.gradle

	publications = ['mavenJava']
	dryRun = false
	publish = true
	pkg {
		repo = 'CipT-artefacts'
		name = 'Ecore2JavaGradle'
		desc = 'A gradle task for generating Java code from Ecore'
		websiteUrl = 'https://github.com/teodorov/Ecore2JavaGradle'
        issueTrackerUrl = 'https://github.com/teodorov/Ecore2JavaGradle/issues'
        vcsUrl = 'https://github.com/teodorov/Ecore2JavaGradle.git'
        licenses = ['MIT']
        labels = ['ecore', 'gradle']
        publicDownloadNumbers = true
      
        //Optional version descriptor
        version {
            name = project.version //Bintray logical version name
            desc = 'initial release' //'optional, version-specific description'
            released  = new java.util.Date() //'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//                vcsTag = '1.3.0'
            attributes = ['gradle-plugin': 'org.ensta:org.ensta:ecore2java-plugin'] //Optional version-level attributes
//                gpg {
//                    sign = true //Determines whether to GPG sign the files. The default is false
//                    passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
//                }
		}
	}
}